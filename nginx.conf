worker_processes  4; # based on CPU cores
worker_rlimit_nofile 100000; # max file descriptors
# only log critical errors
error_log \logs\error.log crit;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # this specifies that there is a WSGI server running on port 8080
    upstream app_server_flaskapp {
        # fail_timeout=0 means we always retry an upstream even if it failed
        server localhost:8080 fail_timeout=0;
    }

    # Nginx is set up to run on the standard HTTP port and listen for requests
    server {
        listen       80;
        server_name  localhost;
        access_log   off;

      # Access ngx_http_stub_status_module for basic status information
      # run nginx with --with-http_stub_status_module config parameter
      # location = /basic_status {
      #   stub_status;
      # }

      # nginx should serve up static files and never send to the WSGI server
      # but we have no static files
      # location /static {
      #   autoindex on;
      #   alias /srv/www/assets;
      #   # checks for static file, if not found proxy to app
      #   try_files $uri @proxy_to_app;
      # }

      # requests that do not fall under /static are passed on to the WSGI
      # server that was specified above running on port 8080
      location / {
        #inform the upstream server about the userâ€™s IP address and other request properties:
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        # let the upstream handle it (the Flask app)
        proxy_pass http://app_server_flaskapp;
      }

      # error_page 500 502 503 504 /500.html;
      # location = /500.html {
      #   root /path/to/app/current/public;
      # }

        # # HTTP authentication. Username: user1, Password: password1
        # auth_basic "Authentication Required";
        # auth_basic_user_file .pwd;
    }
}
