import { Frontend } from '@sentry/core';
import { Breadcrumb, Context, SentryEvent } from '@sentry/shim';
import { CommonBackend, ElectronOptions } from '../common';
/** Backend implementation for Electron renderer backends. */
export declare class MainBackend implements CommonBackend {
    /** Handle to the SDK frontend for callbacks. */
    private readonly frontend;
    /** The inner SDK used to record Node events. */
    private readonly inner;
    /** Store to persist breadcrumbs beyond application crashes. */
    private readonly breadcrumbs;
    /** Store to persist context information beyond application crashes. */
    private readonly context;
    /** Uploader for minidump files. */
    private uploader?;
    /** Creates a new Electron backend instance. */
    constructor(frontend: Frontend<ElectronOptions>);
    /**
     * @inheritDoc
     */
    install(): boolean;
    /**
     * @inheritDoc
     */
    eventFromException(exception: any): Promise<SentryEvent>;
    /**
     * @inheritDoc
     */
    eventFromMessage(message: string): Promise<SentryEvent>;
    /**
     * @inheritDoc
     */
    sendEvent(event: SentryEvent): Promise<number>;
    /**
     * Uploads the given minidump and attaches event information.
     *
     * @param path A relative or absolute path to the minidump file.
     * @param event Optional event information to add to the minidump request.
     * @returns A promise that resolves to the status code of the request.
     */
    uploadMinidump(path: string, event?: SentryEvent): Promise<number>;
    /** Returns the full list of breadcrumbs (or empty). */
    loadBreadcrumbs(): Breadcrumb[];
    /**
     * @inheritDoc
     */
    storeBreadcrumb(breadcrumb: Breadcrumb): boolean;
    /** Returns the latest context (or empty). */
    loadContext(): Context;
    /**
     * @inheritDoc
     */
    storeContext(nextContext: Context): boolean;
    /** Returns whether JS is enabled. */
    private isJavaScriptEnabled();
    /** Returns whether native reports are enabled. */
    private isNativeEnabled();
    /** Activates the Electron CrashReporter. */
    private installNativeHandler();
    /** Activates the Node SDK for the main process. */
    private installJavaScriptHandler();
    /** Installs IPC handlers to receive events and metadata from renderers. */
    private installIPC();
    /** Installs auto-breadcrumb handlers for certain Electron events. */
    private installAutoBreadcrumbs();
    /**
     * Hooks into the Electron EventEmitter to capture breadcrumbs for the
     * specified events.
     */
    private instrumentBreadcrumbs(category, emitter, events?);
    /** Loads new native crashes from disk and sends them to Sentry. */
    private sendNativeCrashes(extra);
}
